trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

pr:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

name: $(Build.BuildId)

variables:
- name: VMImage
  value: 'windows-2019'
- name: BuildPlatform
  value: 'Any CPU'
- name: BuildConfiguration
  value: Release
- group: 'Code Signing'
- group: 'GitHub Release'

stages:
- stage: build
  displayName: Build NuGet Packages
  jobs:
  - job: buildJob
    displayName: Build Prism.Plugin.Logging
    pool:
      vmImage: $(VMImage)
      demands:
      - MSBuild
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: NuGetToolInstaller@1
      displayName: Use Latest NuGet
      inputs:
        checkLatest: true

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        feedsToUse: config
        nugetConfigPath: NuGet.config

    - task: MSBuild@1
      displayName: Build Prism.Plugin.Logging
      inputs:
        solution: Prism.Plugin.Logging.sln
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:DebugType=portable /p:JavaSdkDirectory="$(JAVA_HOME)"'

    - powershell: ./Sign-Packages.ps1
      workingDirectory: build
      displayName: Authenticode Sign Artifacts
      env:
        SignClientUser: $(SignClientUser)
        SignClientSecret: $(SignClientSecret)
        SignClientClientId: $(SignClientClientId)
        SignClientTenantId: $(SignClientTenantId)
        SignServiceResourceId: $(SignServiceResourceId)
      condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

    - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs:
        command: test
        nobuild: true
        projects: tests/**/*.Tests.csproj
        publishTestResults: true

    - task: PublishPipelineArtifact@1
      displayName: Publish Package Artifacts
      inputs:
        artifactName: NuGet
        targetPath: '$(Build.ArtifactStagingDirectory)'

- stage: deploy
  displayName: Deploy to CI Feeds
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/rel')))
  jobs:
  - deployment: SponsorConnect
    displayName: Sponsor Connect
    environment: SponsorConnect
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            displayName: NuGet Push
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;$(Pipeline.Workspace)/**/*.snupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'SponsorConnect'

  - deployment: NuGet
    displayName: NuGet.org
    environment: NuGet
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/rel'))
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            displayName: Get Build Resources

          - powershell: build/Process-Release.ps1
            displayName: Process Artifacts for Release

          - task: GithubRelease@0
            displayName: 'Create GitHub Release'
            inputs:
              githubConnection: 'GitHub - Dan Siegel'
              title: '$(ReleaseDisplayName)'
              tag: 'v$(VersionName)'
              isPreRelease: $(IS_PREVIEW)
              assets: |
                $(Pipeline.Workspace)/**/*.nupkg
                $(Pipeline.Workspace)/**/*.snupkg
              addChangeLog: true
              isDraft: true

          - task: NuGetCommand@2
            displayName: NuGet Push
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;$(Pipeline.Workspace)/**/*.snupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'NuGet'
